#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <signal.h>
#include <sys/types.h>

int main() {
    pid_t pid = fork();

    if (pid == -1) {
        perror("Fork error");
        exit(1);
    }

    if (pid == 0) {
        // Child process
        signal(SIGHUP, SIG_IGN);
        signal(SIGINT, SIG_IGN);
        signal(SIGQUIT, [](int signum) {
            printf("My Papa has Killed me!!!\n");
            exit(0);
        });

        while (1) {
            // Child process continues running
        }
    } else {
        // Parent process
        for (int i = 0; i < 5; ++i) {
            sleep(3);
            if (i < 4) {
                kill(pid, SIGHUP);
            } else {
                kill(pid, SIGQUIT);
            }
        }
        wait(NULL); // Wait for the child process to terminate
    }

    return 0;
}
